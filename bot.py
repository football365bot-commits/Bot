import asyncio
from aiohttp import web
from aiogram import Bot, Dispatcher
from config import BOT_TOKEN, WEBHOOK_HOST
from handlers.start import router as start_router

# –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å –¥–ª—è webhook
WEBHOOK_PATH = f"/webhook/{BOT_TOKEN}"
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

# –ü–æ—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–π Render –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
import os
PORT = int(os.getenv("PORT", 8443))  # 8443 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è webhook

async def main():
    # –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
    bot = Bot(token=BOT_TOKEN)
    dp = Dispatcher()
    dp.include_router(start_router)

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook, –µ—Å–ª–∏ –æ–Ω –±—ã–ª
    await bot.delete_webhook(drop_pending_updates=True)

    # –°–æ–∑–¥–∞—ë–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ aiohttp
    app = web.Application()

    # –ó–∞–ø—É—Å–∫ webhook —Å–µ—Ä–≤–µ—Ä–∞
    await dp.start_webhook(
        dispatcher=dp,
        webhook_path=WEBHOOK_PATH,
        bot=bot,
        skip_updates=True,
        host="0.0.0.0",  # —Å–ª—É—à–∞–µ–º –≤—Å–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
        port=PORT,
        web_app=app
    )

if __name__ == "__main__":
    print(f"üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å webhook –Ω–∞ {WEBHOOK_URL}")
    asyncio.run(main())