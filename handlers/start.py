from aiogram import Router
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from create_bot import bot, CHANNEL_USERNAME  # –î–æ–±–∞–≤–ª—è–µ–º username –∫–∞–Ω–∞–ª–∞

router = Router()

# –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"
check_subscription_kb = InlineKeyboardMarkup()
check_subscription_kb.add(
    InlineKeyboardButton(
        text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
        callback_data="check_subscription"
    )
)

@router.message(commands=["start"])
async def start_handler(message: Message):
    await message.answer(
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.full_name}! \n"
        f"–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: {CHANNEL_USERNAME}",
        reply_markup=check_subscription_kb
    )

@router.callback_query(lambda c: c.data == "check_sub")
async def check_subscription(call: CallbackQuery):
    user_id = call.from_user.id
    try:
        member = await bot.get_chat_member(chat_id=CHANNEL_USERNAME, user_id=user_id)
        if member.is_chat_member():
            await call.message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! üéâ")
        else:
            await call.message.answer("–ü–æ—Ö–æ–∂–µ, –≤—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å üòï")
    except Exception:
        await call.message.answer(" –ù–µ –º–æ–≥—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É,–ø–æ—Ö–æ–∂–µ –∫–∞–Ω–∞–ª –Ω–µ –ø—É–±–ª–∏—á–Ω—ã–π!")
